{"ast":null,"code":"var _jsxFileName = \"/Users/shovo/Downloads/mini/my-file-browser/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FileComponent = ({\n  name,\n  content,\n  onContentSave,\n  onRename,\n  onDelete,\n  onCopy,\n  onCut\n}) => {\n  _s();\n  const [editContent, setEditContent] = useState(content);\n  const [isEditing, setIsEditing] = useState(false);\n  const [newName, setNewName] = useState(name);\n  const [isRenaming, setIsRenaming] = useState(false);\n  const handleSave = () => {\n    onContentSave(name, editContent);\n    setIsEditing(false);\n  };\n  const handleRename = () => {\n    onRename(name, newName);\n    setIsRenaming(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: '20px'\n    },\n    children: isRenaming ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newName,\n        onChange: e => setNewName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRename,\n        children: \"Rename\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsRenaming(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: editContent,\n          onChange: e => setEditContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsEditing(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsEditing(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsRenaming(true),\n          children: \"Rename\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onCopy(name),\n          children: \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onCut(name),\n          children: \"Cut\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onDelete(name),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(FileComponent, \"gIX5QOawCRsept225QaO33g6HUc=\");\n_c = FileComponent;\nconst FolderComponent = ({\n  name,\n  children,\n  onDelete,\n  onPaste,\n  on\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onDelete(name),\n      children: \"Delete Folder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onPaste(name),\n      children: \"Paste Here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_c2 = FolderComponent;\nfunction App() {\n  _s2();\n  const [fileSystem, setFileSystem] = useState({});\n  const [newItemName, setNewItemName] = useState('');\n  const [clipboard, setClipboard] = useState(null);\n  const addNewItem = isFolder => {\n    const newFileSystem = {\n      ...fileSystem\n    };\n    if (newFileSystem[newItemName]) {\n      alert('A file or folder with this name already exists.');\n      return;\n    }\n    const content = isFolder ? {} : 'New content';\n    newFileSystem[newItemName] = content;\n    setFileSystem(newFileSystem);\n    setNewItemName('');\n  };\n  const updateFileContent = (fileName, content) => {\n    const newFileSystem = {\n      ...fileSystem\n    };\n    newFileSystem[fileName] = content;\n    setFileSystem(newFileSystem);\n  };\n  const renameItem = (oldName, newName) => {\n    if (oldName !== newName) {\n      const newFileSystem = {\n        ...fileSystem\n      };\n      if (newFileSystem[newName]) {\n        alert('A file or folder with the new name already exists.');\n        return;\n      }\n      newFileSystem[newName] = newFileSystem[oldName];\n      delete newFileSystem[oldName];\n      setFileSystem(newFileSystem);\n    }\n  };\n  const deleteItem = itemName => {\n    const newFileSystem = {\n      ...fileSystem\n    };\n    delete newFileSystem[itemName];\n    setFileSystem(newFileSystem);\n  };\n  const copyItem = itemName => {\n    setClipboard({\n      itemName,\n      content: fileSystem[itemName],\n      action: 'copy'\n    });\n  };\n  const cutItem = itemName => {\n    setClipboard({\n      itemName,\n      content: fileSystem[itemName],\n      action: 'cut'\n    });\n  };\n  const pasteItem = targetFolderName => {\n    if (!clipboard) return;\n    const {\n      itemName,\n      content,\n      action\n    } = clipboard;\n    const newFileSystem = {\n      ...fileSystem\n    };\n    if (action === 'cut') {\n      if (newFileSystem[targetFolderName]) {\n        newFileSystem[targetFolderName][itemName] = content;\n        delete newFileSystem[clipboard.itemName];\n      } else {\n        newFileSystem[targetFolderName] = {\n          [itemName]: content\n        };\n      }\n    } else if (action === 'copy') {\n      if (newFileSystem[targetFolderName]) {\n        newFileSystem[targetFolderName][itemName] = content;\n      } else {\n        newFileSystem[targetFolderName] = {\n          [itemName]: content\n        };\n      }\n    }\n    setFileSystem(newFileSystem);\n    if (action === 'cut') {\n      setClipboard(null);\n    }\n  };\n  const renderFileSystem = fs => {\n    return Object.keys(fs).map(key => {\n      if (typeof fs[key] === 'object' && fs[key] !== null && !(fs[key] instanceof Array)) {\n        return /*#__PURE__*/_jsxDEV(FolderComponent, {\n          name: key,\n          onDelete: () => deleteItem(key),\n          onPaste: () => pasteItem(key),\n          children: renderFileSystem(fs[key])\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(FileComponent, {\n          name: key,\n          content: fs[key],\n          onContentSave: (name, content) => updateFileContent(name, content),\n          onRename: (oldName, newName) => renameItem(oldName, newName),\n          onDelete: () => deleteItem(key),\n          onCopy: () => copyItem(key),\n          onCut: () => cutItem(key)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newItemName,\n      placeholder: \"New file or folder name\",\n      onChange: e => setNewItemName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addNewItem(true),\n      children: \"Add Folder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addNewItem(false),\n      children: \"Add File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), clipboard && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => pasteItem(''),\n      children: \"Paste into root\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: renderFileSystem(fileSystem)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"0xzL3UTldgfIrhxqGp5X5eJoRYw=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"FileComponent\");\n$RefreshReg$(_c2, \"FolderComponent\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","FileComponent","name","content","onContentSave","onRename","onDelete","onCopy","onCut","_s","editContent","setEditContent","isEditing","setIsEditing","newName","setNewName","isRenaming","setIsRenaming","handleSave","handleRename","style","marginBottom","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","FolderComponent","onPaste","on","marginLeft","_c2","App","_s2","fileSystem","setFileSystem","newItemName","setNewItemName","clipboard","setClipboard","addNewItem","isFolder","newFileSystem","alert","updateFileContent","renameItem","oldName","deleteItem","itemName","copyItem","action","cutItem","pasteItem","targetFolderName","renderFileSystem","fs","Object","keys","map","key","Array","type","placeholder","marginTop","_c3","$RefreshReg$"],"sources":["/Users/shovo/Downloads/mini/my-file-browser/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst FileComponent = ({ name, content, onContentSave, onRename, onDelete, onCopy, onCut }) => {\n  const [editContent, setEditContent] = useState(content);\n  const [isEditing, setIsEditing] = useState(false);\n  const [newName, setNewName] = useState(name);\n  const [isRenaming, setIsRenaming] = useState(false);\n\n  const handleSave = () => {\n    onContentSave(name, editContent);\n    setIsEditing(false);\n  };\n\n  const handleRename = () => {\n    onRename(name, newName);\n    setIsRenaming(false);\n  };\n\n  return (\n    <div style={{ marginBottom: '20px' }}>\n      {isRenaming ? (\n        <>\n          <input value={newName} onChange={(e) => setNewName(e.target.value)} />\n          <button onClick={handleRename}>Rename</button>\n          <button onClick={() => setIsRenaming(false)}>Cancel</button>\n        </>\n      ) : (\n        <>\n          <h3>{name}</h3>\n          {isEditing ? (\n            <>\n              <textarea value={editContent} onChange={(e) => setEditContent(e.target.value)} />\n              <button onClick={handleSave}>Save</button>\n              <button onClick={() => setIsEditing(false)}>Cancel</button>\n            </>\n          ) : (\n            <>\n              <button onClick={() => setIsEditing(true)}>Edit</button>\n              <button onClick={() => setIsRenaming(true)}>Rename</button>\n              <button onClick={() => onCopy(name)}>Copy</button>\n              <button onClick={() => onCut(name)}>Cut</button>\n              <button onClick={() => onDelete(name)}>Delete</button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nconst FolderComponent = ({ name, children, onDelete, onPaste, on }) => {\n  return (\n    <div style={{ marginLeft: '20px' }}>\n      <h2>{name}</h2>\n      <button onClick={() => onDelete(name)}>Delete Folder</button>\n      <button onClick={() => onPaste(name)}>Paste Here</button>\n      {children}\n    </div>\n  );\n};\n\nfunction App() {\n  const [fileSystem, setFileSystem] = useState({});\n  const [newItemName, setNewItemName] = useState('');\n  const [clipboard, setClipboard] = useState(null);\n\n  const addNewItem = (isFolder) => {\n    const newFileSystem = { ...fileSystem };\n    if (newFileSystem[newItemName]) {\n      alert('A file or folder with this name already exists.');\n      return;\n    }\n    const content = isFolder ? {} : 'New content';\n    newFileSystem[newItemName] = content;\n    setFileSystem(newFileSystem);\n    setNewItemName('');\n  };\n\n  const updateFileContent = (fileName, content) => {\n    const newFileSystem = { ...fileSystem };\n    newFileSystem[fileName] = content;\n    setFileSystem(newFileSystem);\n  };\n\n  const renameItem = (oldName, newName) => {\n    if (oldName !== newName) {\n      const newFileSystem = { ...fileSystem };\n      if (newFileSystem[newName]) {\n        alert('A file or folder with the new name already exists.');\n        return;\n      }\n      newFileSystem[newName] = newFileSystem[oldName];\n      delete newFileSystem[oldName];\n      setFileSystem(newFileSystem);\n    }\n  };\n\n  const deleteItem = (itemName) => {\n    const newFileSystem = { ...fileSystem };\n    delete newFileSystem[itemName];\n    setFileSystem(newFileSystem);\n  };\n\n  const copyItem = (itemName) => {\n    setClipboard({ itemName, content: fileSystem[itemName], action: 'copy' });\n  };\n\n  const cutItem = (itemName) => {\n    setClipboard({ itemName, content: fileSystem[itemName], action: 'cut' });\n  };\n\n  const pasteItem = (targetFolderName) => {\n    if (!clipboard) return;\n    const { itemName, content, action } = clipboard;\n    const newFileSystem = { ...fileSystem };\n    if (action === 'cut') {\n      if (newFileSystem[targetFolderName]) {\n        newFileSystem[targetFolderName][itemName] = content;\n        delete newFileSystem[clipboard.itemName];\n      } else {\n        newFileSystem[targetFolderName] = { [itemName]: content };\n      }\n    } else if (action === 'copy') {\n      if (newFileSystem[targetFolderName]) {\n        newFileSystem[targetFolderName][itemName] = content;\n      } else {\n        newFileSystem[targetFolderName] = { [itemName]: content };\n      }\n    }\n    setFileSystem(newFileSystem);\n    if (action === 'cut') {\n      setClipboard(null);\n    }\n  };\n\n  const renderFileSystem = (fs) => {\n    return Object.keys(fs).map((key) => {\n      if (typeof fs[key] === 'object' && fs[key] !== null && !(fs[key] instanceof Array)) {\n        return (\n          <FolderComponent\n            key={key}\n            name={key}\n            onDelete={() => deleteItem(key)}\n            onPaste={() => pasteItem(key)}\n          >\n            {renderFileSystem(fs[key])}\n          </FolderComponent>\n        );\n      } else {\n        return (\n          <FileComponent\n            key={key}\n            name={key}\n            content={fs[key]}\n            onContentSave={(name, content) => updateFileContent(name, content)}\n            onRename={(oldName, newName) => renameItem(oldName, newName)}\n            onDelete={() => deleteItem(key)}\n            onCopy={() => copyItem(key)}\n            onCut={() => cutItem(key)}\n          />\n        );\n      }\n    });\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={newItemName}\n        placeholder=\"New file or folder name\"\n        onChange={(e) => setNewItemName(e.target.value)}\n      />\n      <button onClick={() => addNewItem(true)}>Add Folder</button>\n      <button onClick={() => addNewItem(false)}>Add File</button>\n      {clipboard && (\n        <button onClick={() => pasteItem('')}>Paste into root</button>\n      )}\n      <div style={{ marginTop: '20px' }}>\n        {renderFileSystem(fileSystem)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}