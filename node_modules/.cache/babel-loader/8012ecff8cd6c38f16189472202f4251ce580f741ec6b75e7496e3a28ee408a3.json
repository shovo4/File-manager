{"ast":null,"code":"var _jsxFileName = \"/Users/shovo/Downloads/mini/my-file-browser/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport File from './components/File';\nimport Folder from './components/Folder';\nimport SearchBar from './components/SearchBar';\nimport FileViewer from './components/FileViewer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Initial mock data\n  const [fileSystem, setFileSystem] = useState({\n    folders: [{\n      name: 'Folder1',\n      files: ['file1.txt', 'file2.js']\n    }, {\n      name: 'Folder2',\n      files: ['document.json']\n    }]\n  });\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleSearch = term => {\n    setSearchTerm(term);\n  };\n  const filteredFolders = fileSystem.folders.filter(folder => folder.name.toLowerCase().includes(searchTerm.toLowerCase()) || folder.files.some(file => file.toLowerCase().includes(searchTerm.toLowerCase())));\n  const handleFileClick = fileName => {\n    // Placeholder for file click logic, like opening the file viewer\n    setSelectedFile(fileName);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), filteredFolders.map(folder => /*#__PURE__*/_jsxDEV(Folder, {\n      name: folder.name,\n      children: folder.files.map(file => /*#__PURE__*/_jsxDEV(File, {\n        name: file,\n        onClick: () => handleFileClick(file)\n      }, file, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this))\n    }, folder.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)), selectedFile && /*#__PURE__*/_jsxDEV(FileViewer, {\n      file: selectedFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6kvzWy/NW7OuTHsXsyjIURlcx10=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","File","Folder","SearchBar","FileViewer","jsxDEV","_jsxDEV","App","_s","fileSystem","setFileSystem","folders","name","files","searchTerm","setSearchTerm","selectedFile","setSelectedFile","handleSearch","term","filteredFolders","filter","folder","toLowerCase","includes","some","file","handleFileClick","fileName","children","onSearch","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["/Users/shovo/Downloads/mini/my-file-browser/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport File from './components/File';\nimport Folder from './components/Folder';\nimport SearchBar from './components/SearchBar';\nimport FileViewer from './components/FileViewer';\n\nfunction App() {\n  // Initial mock data\n  const [fileSystem, setFileSystem] = useState({\n    folders: [\n      {\n        name: 'Folder1',\n        files: ['file1.txt', 'file2.js']\n      },\n      {\n        name: 'Folder2',\n        files: ['document.json']\n      }\n    ]\n  });\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const handleSearch = term => {\n    setSearchTerm(term);\n  };\n\n  const filteredFolders = fileSystem.folders.filter(folder =>\n    folder.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    folder.files.some(file => file.toLowerCase().includes(searchTerm.toLowerCase()))\n  );\n\n  const handleFileClick = fileName => {\n    // Placeholder for file click logic, like opening the file viewer\n    setSelectedFile(fileName);\n  };\n\n  return (\n    <div>\n      <SearchBar onSearch={handleSearch} />\n      {filteredFolders.map(folder => (\n        <Folder key={folder.name} name={folder.name}>\n          {folder.files.map(file => (\n            <File key={file} name={file} onClick={() => handleFileClick(file)} />\n          ))}\n        </Folder>\n      ))}\n      {selectedFile && <FileViewer file={selectedFile} />}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC;IAC3CW,OAAO,EAAE,CACP;MACEC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,CAAC,WAAW,EAAE,UAAU;IACjC,CAAC,EACD;MACED,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,CAAC,eAAe;IACzB,CAAC;EAEL,CAAC,CAAC;EAEF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMkB,YAAY,GAAGC,IAAI,IAAI;IAC3BJ,aAAa,CAACI,IAAI,CAAC;EACrB,CAAC;EAED,MAAMC,eAAe,GAAGX,UAAU,CAACE,OAAO,CAACU,MAAM,CAACC,MAAM,IACtDA,MAAM,CAACV,IAAI,CAACW,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACV,UAAU,CAACS,WAAW,CAAC,CAAC,CAAC,IAC5DD,MAAM,CAACT,KAAK,CAACY,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACH,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACV,UAAU,CAACS,WAAW,CAAC,CAAC,CAAC,CACjF,CAAC;EAED,MAAMI,eAAe,GAAGC,QAAQ,IAAI;IAClC;IACAX,eAAe,CAACW,QAAQ,CAAC;EAC3B,CAAC;EAED,oBACEtB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA,CAACH,SAAS;MAAC2B,QAAQ,EAAEZ;IAAa;MAAAU,QAAA,EAAAG,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACpCb,eAAe,CAACc,GAAG,CAACZ,MAAM,iBACzBhB,OAAA,CAACJ,MAAM;MAAmBU,IAAI,EAAEU,MAAM,CAACV,IAAK;MAAAiB,QAAA,EACzCP,MAAM,CAACT,KAAK,CAACqB,GAAG,CAACR,IAAI,iBACpBpB,OAAA,CAACL,IAAI;QAAYW,IAAI,EAAEc,IAAK;QAACS,OAAO,EAAEA,CAAA,KAAMR,eAAe,CAACD,IAAI;MAAE,GAAvDA,IAAI;QAAAE,QAAA,EAAAG,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqD,CACrE;IAAC,GAHSX,MAAM,CAACV,IAAI;MAAAgB,QAAA,EAAAG,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIhB,CACT,CAAC,EACDjB,YAAY,iBAAIV,OAAA,CAACF,UAAU;MAACsB,IAAI,EAAEV;IAAa;MAAAY,QAAA,EAAAG,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAL,QAAA,EAAAG,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV;AAACzB,EAAA,CA7CQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}