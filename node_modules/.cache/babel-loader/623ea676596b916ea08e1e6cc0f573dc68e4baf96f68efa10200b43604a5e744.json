{"ast":null,"code":"var _jsxFileName = \"/Users/shovo/Downloads/mini/my-file-browser/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FileComponent = ({\n  name,\n  content,\n  onContentSave,\n  onRename,\n  onDelete,\n  onCopy,\n  onCut\n}) => {\n  _s();\n  const [editContent, setEditContent] = useState(content);\n  const [isEditing, setIsEditing] = useState(false);\n  const [newName, setNewName] = useState(name);\n  const [isRenaming, setIsRenaming] = useState(false);\n  const handleSave = () => {\n    onContentSave(name, editContent);\n    setIsEditing(false);\n  };\n  const handleRename = () => {\n    onRename(name, newName);\n    setIsRenaming(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: '20px'\n    },\n    children: isRenaming ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newName,\n        onChange: e => setNewName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRename,\n        children: \"Rename\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsRenaming(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: editContent,\n          onChange: e => setEditContent(e.target.value),\n          rows: \"6\",\n          cols: \"30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsEditing(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsEditing(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsRenaming(true),\n          children: \"Rename\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onCopy(name),\n          children: \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onCut(name),\n          children: \"Cut\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onDelete(name),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(FileComponent, \"gIX5QOawCRsept225QaO33g6HUc=\");\n_c = FileComponent;\nconst FolderComponent = ({\n  name,\n  onDelete,\n  onPaste,\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onDelete(name),\n      children: \"Delete Folder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onPaste(name),\n      children: \"Paste Here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_c2 = FolderComponent;\nfunction App() {\n  _s2();\n  const [fileSystem, setFileSystem] = useState({});\n  const [newItemName, setNewItemName] = useState('');\n  const [clipboard, setClipboard] = useState(null);\n  const addNewItem = isFolder => {\n    if (!newItemName) {\n      alert('Please enter a name.');\n      return;\n    }\n    const newFileSystem = {\n      ...fileSystem\n    };\n    if (newFileSystem[newItemName]) {\n      alert('A file or folder with this name already exists.');\n      return;\n    }\n    newFileSystem[newItemName] = isFolder ? {} : 'New content';\n    setFileSystem(newFileSystem);\n    setNewItemName('');\n  };\n  const updateFileContent = (fileName, content) => {\n    const newFileSystem = {\n      ...fileSystem\n    };\n    newFileSystem[fileName] = content;\n    setFileSystem(newFileSystem);\n  };\n  const renameItem = (oldName, newName) => {\n    if (!oldName || !newName || oldName === newName) {\n      alert('Invalid rename operation.');\n      return;\n    }\n    const newFileSystem = {\n      ...fileSystem\n    };\n    if (newFileSystem[newName]) {\n      alert('A file or folder with the new name already exists.');\n      return;\n    }\n    const itemContent = newFileSystem[oldName];\n    delete newFileSystem[oldName];\n    newFileSystem[newName] = itemContent;\n    setFileSystem(newFileSystem);\n    if (clipboard && clipboard.itemName === oldName) {\n      setClipboard({\n        ...clipboard,\n        itemName: newName\n      });\n    }\n  };\n  const deleteItem = itemName => {\n    if (!itemName) {\n      alert('Invalid delete operation.');\n      return;\n    }\n    const newFileSystem = {\n      ...fileSystem\n    };\n    delete newFileSystem[itemName];\n    setFileSystem(newFileSystem);\n    if (clipboard && clipboard.itemName === itemName) {\n      setClipboard(null);\n    }\n  };\n  const copyItem = itemName => {\n    if (!itemName) {\n      alert('Invalid copy operation.');\n      return;\n    }\n    setClipboard({\n      itemName,\n      content: fileSystem[itemName],\n      action: 'copy'\n    });\n  };\n  const cutItem = itemName => {\n    if (!itemName) {\n      alert('Invalid cut operation.');\n      return;\n    }\n    setClipboard({\n      itemName,\n      content: fileSystem[itemName],\n      action: 'cut'\n    });\n  };\n  const pasteItem = targetFolderName => {\n    if (!clipboard || !fileSystem[targetFolderName]) {\n      alert('Paste operation is not possible.');\n      return;\n    }\n    const {\n      itemName,\n      content,\n      action\n    } = clipboard;\n    const newFileSystem = {\n      ...fileSystem\n    };\n    if (newFileSystem[targetFolderName][itemName]) {\n      alert('An item with this name already exists in the target folder.');\n      return;\n    }\n    newFileSystem[targetFolderName][itemName] = content;\n    setFileSystem(newFileSystem);\n    if (action === 'cut') {\n      delete newFileSystem[clipboard.itemName];\n      setClipboard(null);\n    }\n  };\n  const renderFileSystem = (fs, path = '') => {\n    return Object.keys(fs).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: typeof fs[key] === 'object' ? /*#__PURE__*/_jsxDEV(FolderComponent, {\n        name: key,\n        onDelete: () => deleteItem(key),\n        onPaste: pasteItem,\n        children: renderFileSystem(fs[key], path + key)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(FileComponent, {\n        name: key,\n        content: fs[key],\n        onContentSave: updateFileContent,\n        onRename: renameItem,\n        onDelete: deleteItem,\n        onCopy: copyItem,\n        onCut: cutItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this)\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newItemName,\n      onChange: e => setNewItemName(e.target.value),\n      placeholder: \"Enter file or folder name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addNewItem(true),\n      children: \"Add Folder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addNewItem(false),\n      children: \"Add File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), clipboard && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => pasteItem(''),\n      children: \"Paste\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderFileSystem(fileSystem)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"0xzL3UTldgfIrhxqGp5X5eJoRYw=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"FileComponent\");\n$RefreshReg$(_c2, \"FolderComponent\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","FileComponent","name","content","onContentSave","onRename","onDelete","onCopy","onCut","_s","editContent","setEditContent","isEditing","setIsEditing","newName","setNewName","isRenaming","setIsRenaming","handleSave","handleRename","style","marginBottom","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","rows","cols","_c","FolderComponent","onPaste","marginLeft","_c2","App","_s2","fileSystem","setFileSystem","newItemName","setNewItemName","clipboard","setClipboard","addNewItem","isFolder","alert","newFileSystem","updateFileContent","renameItem","oldName","itemContent","itemName","deleteItem","copyItem","action","cutItem","pasteItem","targetFolderName","renderFileSystem","fs","path","Object","keys","map","key","placeholder","_c3","$RefreshReg$"],"sources":["/Users/shovo/Downloads/mini/my-file-browser/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst FileComponent = ({ name, content, onContentSave, onRename, onDelete, onCopy, onCut }) => {\n  const [editContent, setEditContent] = useState(content);\n  const [isEditing, setIsEditing] = useState(false);\n  const [newName, setNewName] = useState(name);\n  const [isRenaming, setIsRenaming] = useState(false);\n\n  const handleSave = () => {\n    onContentSave(name, editContent);\n    setIsEditing(false);\n  };\n\n  const handleRename = () => {\n    onRename(name, newName);\n    setIsRenaming(false);\n  };\n\n  return (\n    <div style={{ marginBottom: '20px' }}>\n      {isRenaming ? (\n        <>\n          <input\n            type=\"text\"\n            value={newName}\n            onChange={(e) => setNewName(e.target.value)}\n          />\n          <button onClick={handleRename}>Rename</button>\n          <button onClick={() => setIsRenaming(false)}>Cancel</button>\n        </>\n      ) : (\n        <>\n          <h3>{name}</h3>\n          {isEditing ? (\n            <>\n              <textarea\n                value={editContent}\n                onChange={(e) => setEditContent(e.target.value)}\n                rows=\"6\"\n                cols=\"30\"\n              />\n              <br />\n              <button onClick={handleSave}>Save</button>\n              <button onClick={() => setIsEditing(false)}>Cancel</button>\n            </>\n          ) : (\n            <>\n              <button onClick={() => setIsEditing(true)}>Edit</button>\n              <button onClick={() => setIsRenaming(true)}>Rename</button>\n              <button onClick={() => onCopy(name)}>Copy</button>\n              <button onClick={() => onCut(name)}>Cut</button>\n              <button onClick={() => onDelete(name)}>Delete</button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nconst FolderComponent = ({ name, onDelete, onPaste, children }) => {\n  return (\n    <div style={{ marginLeft: '20px' }}>\n      <h2>{name}</h2>\n      <button onClick={() => onDelete(name)}>Delete Folder</button>\n      <button onClick={() => onPaste(name)}>Paste Here</button>\n      {children}\n    </div>\n  );\n};\n\nfunction App() {\n  const [fileSystem, setFileSystem] = useState({});\n  const [newItemName, setNewItemName] = useState('');\n  const [clipboard, setClipboard] = useState(null);\n\n  const addNewItem = (isFolder) => {\n    if (!newItemName) {\n      alert('Please enter a name.');\n      return;\n    }\n    \n    const newFileSystem = { ...fileSystem };\n    if (newFileSystem[newItemName]) {\n      alert('A file or folder with this name already exists.');\n      return;\n    }\n\n    newFileSystem[newItemName] = isFolder ? {} : 'New content';\n    setFileSystem(newFileSystem);\n    setNewItemName('');\n  };\n\n  const updateFileContent = (fileName, content) => {\n    const newFileSystem = { ...fileSystem };\n    newFileSystem[fileName] = content;\n    setFileSystem(newFileSystem);\n  };\n\n  const renameItem = (oldName, newName) => {\n    if (!oldName || !newName || oldName === newName) {\n      alert('Invalid rename operation.');\n      return;\n    }\n\n    const newFileSystem = { ...fileSystem };\n    if (newFileSystem[newName]) {\n      alert('A file or folder with the new name already exists.');\n      return;\n    }\n\n    const itemContent = newFileSystem[oldName];\n    delete newFileSystem[oldName];\n    newFileSystem[newName] = itemContent;\n    setFileSystem(newFileSystem);\n    if (clipboard && clipboard.itemName === oldName) {\n      setClipboard({ ...clipboard, itemName: newName });\n    }\n  };\n\n  const deleteItem = (itemName) => {\n    if (!itemName) {\n      alert('Invalid delete operation.');\n      return;\n    }\n\n    const newFileSystem = { ...fileSystem };\n    delete newFileSystem[itemName];\n    setFileSystem(newFileSystem);\n    if (clipboard && clipboard.itemName === itemName) {\n      setClipboard(null);\n    }\n  };\n\n  const copyItem = (itemName) => {\n    if (!itemName) {\n      alert('Invalid copy operation.');\n      return;\n    }\n\n    setClipboard({ itemName, content: fileSystem[itemName], action: 'copy' });\n  };\n\n  const cutItem = (itemName) => {\n    if (!itemName) {\n      alert('Invalid cut operation.');\n      return;\n    }\n\n    setClipboard({ itemName, content: fileSystem[itemName], action: 'cut' });\n  };\n\n  const pasteItem = (targetFolderName) => {\n    if (!clipboard || !fileSystem[targetFolderName]) {\n      alert('Paste operation is not possible.');\n      return;\n    }\n\n    const { itemName, content, action } = clipboard;\n    const newFileSystem = { ...fileSystem };\n\n    if (newFileSystem[targetFolderName][itemName]) {\n      alert('An item with this name already exists in the target folder.');\n      return;\n    }\n\n    newFileSystem[targetFolderName][itemName] = content;\n    setFileSystem(newFileSystem);\n\n    if (action === 'cut') {\n      delete newFileSystem[clipboard.itemName];\n      setClipboard(null);\n    }\n  };\n\n  const renderFileSystem = (fs, path = '') => {\n    return Object.keys(fs).map((key) => (\n      <div key={key}>\n        {typeof fs[key] === 'object' ? (\n          <FolderComponent\n            name={key}\n            onDelete={() => deleteItem(key)}\n            onPaste={pasteItem}\n          >\n            {renderFileSystem(fs[key], path + key)}\n          </FolderComponent>\n        ) : (\n          <FileComponent\n            name={key}\n            content={fs[key]}\n            onContentSave={updateFileContent}\n            onRename={renameItem}\n            onDelete={deleteItem}\n            onCopy={copyItem}\n            onCut={cutItem}\n          />\n        )}\n      </div>\n    ));\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={newItemName}\n        onChange={(e) => setNewItemName(e.target.value)}\n        placeholder=\"Enter file or folder name\"\n      />\n      <button onClick={() => addNewItem(true)}>Add Folder</button>\n      <button onClick={() => addNewItem(false)}>Add File</button>\n      {clipboard && <button onClick={() => pasteItem('')}>Paste</button>}\n      <div>{renderFileSystem(fileSystem)}</div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}