{"ast":null,"code":"var _jsxFileName = \"/Users/shovo/Downloads/mini/my-file-browser/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FileComponent = ({\n  name,\n  content,\n  onContentSave,\n  onRename,\n  onDelete,\n  onCopy,\n  onCut\n}) => {\n  // ... existing states from the previous FileComponent\n\n  // ... existing handleSave and handleRename functions from the previous FileComponent\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: '20px'\n    },\n    children: !isRenaming && !isEditing && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onCopy(name),\n        children: \"Copy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onCut(name),\n        children: \"Cut\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onDelete(name),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = FileComponent;\nconst FolderComponent = ({\n  name,\n  onDelete,\n  onPaste,\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onDelete(name),\n      children: \"Delete Folder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onPaste(name),\n      children: \"Paste Here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_c2 = FolderComponent;\nfunction App() {\n  _s();\n  const [fileSystem, setFileSystem] = useState({});\n  const [newItemName, setNewItemName] = useState('');\n  const [clipboard, setClipboard] = useState(null);\n\n  // ... existing addNewItem, updateFileContent, renameItem functions from the previous App\n\n  const deleteItem = itemName => {\n    // ... existing delete logic from the previous App\n  };\n  const copyItem = itemName => {\n    const itemContent = fileSystem[itemName];\n    setClipboard({\n      itemContent,\n      itemName,\n      isCut: false\n    });\n  };\n  const cutItem = itemName => {\n    const itemContent = fileSystem[itemName];\n    setClipboard({\n      itemContent,\n      itemName,\n      isCut: true\n    });\n  };\n  const pasteItem = targetFolderName => {\n    if (!clipboard) return;\n    const newFileSystem = {\n      ...fileSystem\n    };\n    const {\n      itemContent,\n      itemName,\n      isCut\n    } = clipboard;\n\n    // Logic to determine the new unique name if the item already exists at the target location\n    let newName = itemName;\n    let counter = 1;\n    while (newFileSystem[targetFolderName] && newFileSystem[targetFolderName][newName]) {\n      newName = `${itemName}(${counter})`;\n      counter++;\n    }\n\n    // Paste the item\n    if (!newFileSystem[targetFolderName]) newFileSystem[targetFolderName] = {};\n    newFileSystem[targetFolderName][newName] = itemContent;\n\n    // If it was a cut operation, remove the original\n    if (isCut) {\n      delete newFileSystem[clipboard.itemName];\n      setClipboard(null); // Clear the clipboard\n    }\n\n    setFileSystem(newFileSystem);\n  };\n  const renderFileSystem = fs => {\n    return Object.entries(fs).map(([key, value]) => {\n      if (typeof value === 'object') {\n        return /*#__PURE__*/_jsxDEV(FolderComponent, {\n          name: key,\n          onDelete: deleteItem,\n          onPaste: pasteItem,\n          children: renderFileSystem(value)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(FileComponent, {\n          name: key,\n          content: value,\n          onContentSave: updateFileContent,\n          onRename: renameItem,\n          onDelete: deleteItem,\n          onCopy: copyItem,\n          onCut: cutItem\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newItemName,\n      placeholder: \"New file or folder name\",\n      onChange: e => setNewItemName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addNewItem(false),\n      children: \"Add File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addNewItem(true),\n      children: \"Add Folder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => pasteItem('/'),\n      children: \"Paste\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: renderFileSystem(fileSystem)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0xzL3UTldgfIrhxqGp5X5eJoRYw=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"FileComponent\");\n$RefreshReg$(_c2, \"FolderComponent\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","FileComponent","name","content","onContentSave","onRename","onDelete","onCopy","onCut","style","marginBottom","children","isRenaming","isEditing","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","FolderComponent","onPaste","marginLeft","_c2","App","_s","fileSystem","setFileSystem","newItemName","setNewItemName","clipboard","setClipboard","deleteItem","itemName","copyItem","itemContent","isCut","cutItem","pasteItem","targetFolderName","newFileSystem","newName","counter","renderFileSystem","fs","Object","entries","map","key","value","updateFileContent","renameItem","type","placeholder","onChange","e","target","addNewItem","marginTop","_c3","$RefreshReg$"],"sources":["/Users/shovo/Downloads/mini/my-file-browser/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst FileComponent = ({\n  name,\n  content,\n  onContentSave,\n  onRename,\n  onDelete,\n  onCopy,\n  onCut\n}) => {\n  // ... existing states from the previous FileComponent\n\n  // ... existing handleSave and handleRename functions from the previous FileComponent\n\n  return (\n    <div style={{ marginBottom: '20px' }}>\n      {/* ... existing JSX */}\n      {!isRenaming && !isEditing && (\n        <>\n          <button onClick={() => onCopy(name)}>Copy</button>\n          <button onClick={() => onCut(name)}>Cut</button>\n          <button onClick={() => onDelete(name)}>Delete</button>\n        </>\n      )}\n      {/* ... existing JSX for renaming and editing */}\n    </div>\n  );\n};\n\nconst FolderComponent = ({\n  name,\n  onDelete,\n  onPaste,\n  children\n}) => {\n  return (\n    <div style={{ marginLeft: '20px' }}>\n      <h2>{name}</h2>\n      <button onClick={() => onDelete(name)}>Delete Folder</button>\n      <button onClick={() => onPaste(name)}>Paste Here</button>\n      {children}\n    </div>\n  );\n};\n\nfunction App() {\n  const [fileSystem, setFileSystem] = useState({});\n  const [newItemName, setNewItemName] = useState('');\n  const [clipboard, setClipboard] = useState(null);\n\n  // ... existing addNewItem, updateFileContent, renameItem functions from the previous App\n\n  const deleteItem = (itemName) => {\n    // ... existing delete logic from the previous App\n  };\n\n  const copyItem = (itemName) => {\n    const itemContent = fileSystem[itemName];\n    setClipboard({ itemContent, itemName, isCut: false });\n  };\n\n  const cutItem = (itemName) => {\n    const itemContent = fileSystem[itemName];\n    setClipboard({ itemContent, itemName, isCut: true });\n  };\n\n  const pasteItem = (targetFolderName) => {\n    if (!clipboard) return;\n\n    const newFileSystem = { ...fileSystem };\n    const { itemContent, itemName, isCut } = clipboard;\n\n    // Logic to determine the new unique name if the item already exists at the target location\n    let newName = itemName;\n    let counter = 1;\n    while (newFileSystem[targetFolderName] && newFileSystem[targetFolderName][newName]) {\n      newName = `${itemName}(${counter})`;\n      counter++;\n    }\n\n    // Paste the item\n    if (!newFileSystem[targetFolderName]) newFileSystem[targetFolderName] = {};\n    newFileSystem[targetFolderName][newName] = itemContent;\n\n    // If it was a cut operation, remove the original\n    if (isCut) {\n      delete newFileSystem[clipboard.itemName];\n      setClipboard(null); // Clear the clipboard\n    }\n\n    setFileSystem(newFileSystem);\n  };\n\n  const renderFileSystem = (fs) => {\n    return Object.entries(fs).map(([key, value]) => {\n      if (typeof value === 'object') {\n        return (\n          <FolderComponent key={key} name={key} onDelete={deleteItem} onPaste={pasteItem}>\n            {renderFileSystem(value)}\n          </FolderComponent>\n        );\n      } else {\n        return (\n          <FileComponent\n            key={key}\n            name={key}\n            content={value}\n            onContentSave={updateFileContent}\n            onRename={renameItem}\n            onDelete={deleteItem}\n            onCopy={copyItem}\n            onCut={cutItem}\n          />\n        );\n      }\n    });\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={newItemName}\n        placeholder=\"New file or folder name\"\n        onChange={(e) => setNewItemName(e.target.value)}\n      />\n      <button onClick={() => addNewItem(false)}>Add File</button>\n      <button onClick={() => addNewItem(true)}>Add Folder</button>\n      <button onClick={() => pasteItem('/')}>Paste</button>\n      <div style={{ marginTop: '20px' }}>\n        {renderFileSystem(fileSystem)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}