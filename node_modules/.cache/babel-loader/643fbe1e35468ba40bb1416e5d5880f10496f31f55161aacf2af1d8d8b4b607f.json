{"ast":null,"code":"var _jsxFileName = \"/Users/shovo/Downloads/mini/my-file-browser/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FileComponent = ({\n  name,\n  content,\n  onContentSave,\n  onRename,\n  onDelete,\n  onCopy,\n  onCut\n}) => {\n  _s();\n  const [editContent, setEditContent] = useState(content);\n  const [isEditing, setIsEditing] = useState(false);\n  const [newName, setNewName] = useState(name);\n  const [isRenaming, setIsRenaming] = useState(false);\n  const handleSave = () => {\n    onContentSave(name, editContent);\n    setIsEditing(false);\n  };\n  const handleRename = () => {\n    onRename(name, newName);\n    setIsRenaming(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: '20px'\n    },\n    children: isRenaming ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newName,\n        onChange: e => setNewName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRename,\n        children: \"Rename\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsRenaming(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: editContent,\n          onChange: e => setEditContent(e.target.value),\n          rows: \"6\",\n          cols: \"30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsEditing(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsEditing(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsRenaming(true),\n          children: \"Rename\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onCopy(name),\n          children: \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onCut(name),\n          children: \"Cut\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onDelete(name),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(FileComponent, \"gIX5QOawCRsept225QaO33g6HUc=\");\n_c = FileComponent;\nconst FolderComponent = ({\n  name,\n  children,\n  onDelete,\n  onRename,\n  onPaste\n}) => {\n  _s2();\n  const [newName, setNewName] = useState(name);\n  const [isRenaming, setIsRenaming] = useState(false);\n  const handleRename = () => {\n    onRename(name, newName);\n    setIsRenaming(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: '20px'\n    },\n    children: isRenaming ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newName,\n        onChange: e => setNewName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRename,\n        children: \"Rename\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsRenaming(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsRenaming(true),\n        children: \"Rename Folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onDelete(name),\n        children: \"Delete Folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onPaste(name),\n        children: \"Paste Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), children]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s2(FolderComponent, \"35H350/KMMuK4X4VqgVenvmDkMY=\");\n_c2 = FolderComponent;\nfunction App() {\n  _s3();\n  const [fileSystem, setFileSystem] = useState(JSON.parse(localStorage.getItem('fileSystem')) || {});\n  const [newItemName, setNewItemName] = useState('');\n  const [clipboard, setClipboard] = useState(JSON.parse(localStorage.getItem('clipboard')) || null);\n  useEffect(() => {\n    localStorage.setItem('fileSystem', JSON.stringify(fileSystem));\n  }, [fileSystem]);\n  useEffect(() => {\n    localStorage.setItem('clipboard', JSON.stringify(clipboard));\n  }, [clipboard]);\n  const addNewItem = isFolder => {\n    const newFileSystem = {\n      ...fileSystem\n    };\n    if (newFileSystem[newItemName]) {\n      alert('An item with this name already exists.');\n      return;\n    }\n    newFileSystem[newItemName] = isFolder ? {} : 'New content';\n    setFileSystem(newFileSystem);\n    setNewItemName('');\n  };\n  const updateFileContent = (fileName, content) => {\n    const newFileSystem = {\n      ...fileSystem\n    };\n    newFileSystem[fileName] = content;\n    setFileSystem(newFileSystem);\n  };\n  const deleteItem = itemName => {\n    const newFileSystem = {\n      ...fileSystem\n    };\n    delete newFileSystem[itemName];\n    setFileSystem(newFileSystem);\n    if (clipboard && clipboard.itemName === itemName) {\n      setClipboard(null);\n    }\n  };\n  const renameItem = (oldName, newName) => {\n    if (oldName !== newName && newName.trim() !== '') {\n      const newFileSystem = {\n        ...fileSystem\n      };\n      if (newFileSystem[newName]) {\n        alert('An item with this new name already exists.');\n        return;\n      }\n      newFileSystem[newName] = newFileSystem[oldName];\n      delete newFileSystem[oldName];\n      setFileSystem(newFileSystem);\n      if (clipboard && clipboard.itemName === oldName) {\n        setClipboard({\n          ...clipboard,\n          itemName: newName\n        });\n      }\n    }\n  };\n  const copyItem = itemName => {\n    setClipboard({\n      itemName,\n      content: fileSystem[itemName],\n      action: 'copy'\n    });\n  };\n  const cutItem = itemName => {\n    setClipboard({\n      itemName,\n      content: fileSystem[itemName],\n      action: 'cut'\n    });\n  };\n  const pasteItem = targetFolderName => {\n    if (!clipboard || !fileSystem[targetFolderName]) {\n      alert('Paste operation is not possible.');\n      return;\n    }\n    const {\n      itemName,\n      content,\n      action\n    } = clipboard;\n    const newFileSystem = {\n      ...fileSystem\n    };\n    if (newFileSystem[targetFolderName][itemName]) {\n      alert('An item with this name already exists in the target folder.');\n      return;\n    }\n    newFileSystem[targetFolderName][itemName] = content;\n    if (action === 'cut') {\n      delete newFileSystem[clipboard.itemName];\n      setClipboard(null);\n    }\n    setFileSystem(newFileSystem);\n  };\n  const renderFileSystem = (fs, path = '') => {\n    return Object.keys(fs).map(key => {\n      const isFolder = typeof fs[key] === 'object';\n      const fullPath = path ? `${path}/${key}` : key;\n      return /*#__PURE__*/_jsxDEV(ItemComponent, {\n        name: key,\n        isFolder: isFolder,\n        content: isFolder ? null : fs[key],\n        onContentSave: isFolder ? null : updateFileContent,\n        onRename: renameItem,\n        onDelete: deleteItem,\n        onCopy: isFolder ? null : copyItem,\n        onCut: isFolder ? null : cutItem,\n        onPaste: isFolder ? pasteItem : null,\n        children: isFolder && renderFileSystem(fs[key], fullPath)\n      }, fullPath, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newItemName,\n      onChange: e => setNewItemName(e.target.value),\n      placeholder: \"Enter new item name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addNewItem(false),\n      children: \"Add File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addNewItem(true),\n      children: \"Add Folder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), clipboard && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => pasteItem(''),\n      children: \"Paste into root\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: renderFileSystem(fileSystem)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n}\n_s3(App, \"ZNT+RzGUeve5wYCi4ZwFAjzolt0=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"FileComponent\");\n$RefreshReg$(_c2, \"FolderComponent\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","FileComponent","name","content","onContentSave","onRename","onDelete","onCopy","onCut","_s","editContent","setEditContent","isEditing","setIsEditing","newName","setNewName","isRenaming","setIsRenaming","handleSave","handleRename","style","marginBottom","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","rows","cols","_c","FolderComponent","onPaste","_s2","marginLeft","_c2","App","_s3","fileSystem","setFileSystem","JSON","parse","localStorage","getItem","newItemName","setNewItemName","clipboard","setClipboard","setItem","stringify","addNewItem","isFolder","newFileSystem","alert","updateFileContent","deleteItem","itemName","renameItem","oldName","trim","copyItem","action","cutItem","pasteItem","targetFolderName","renderFileSystem","fs","path","Object","keys","map","key","fullPath","ItemComponent","placeholder","marginTop","_c3","$RefreshReg$"],"sources":["/Users/shovo/Downloads/mini/my-file-browser/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst FileComponent = ({\n  name,\n  content,\n  onContentSave,\n  onRename,\n  onDelete,\n  onCopy,\n  onCut\n}) => {\n  const [editContent, setEditContent] = useState(content);\n  const [isEditing, setIsEditing] = useState(false);\n  const [newName, setNewName] = useState(name);\n  const [isRenaming, setIsRenaming] = useState(false);\n\n  const handleSave = () => {\n    onContentSave(name, editContent);\n    setIsEditing(false);\n  };\n\n  const handleRename = () => {\n    onRename(name, newName);\n    setIsRenaming(false);\n  };\n\n  return (\n    <div style={{ marginBottom: '20px' }}>\n      {isRenaming ? (\n        <>\n          <input\n            type=\"text\"\n            value={newName}\n            onChange={(e) => setNewName(e.target.value)}\n          />\n          <button onClick={handleRename}>Rename</button>\n          <button onClick={() => setIsRenaming(false)}>Cancel</button>\n        </>\n      ) : (\n        <>\n          <h3>{name}</h3>\n          {isEditing ? (\n            <>\n              <textarea\n                value={editContent}\n                onChange={(e) => setEditContent(e.target.value)}\n                rows=\"6\"\n                cols=\"30\"\n              />\n              <br />\n              <button onClick={handleSave}>Save</button>\n              <button onClick={() => setIsEditing(false)}>Cancel</button>\n            </>\n          ) : (\n            <>\n              <button onClick={() => setIsEditing(true)}>Edit</button>\n              <button onClick={() => setIsRenaming(true)}>Rename</button>\n              <button onClick={() => onCopy(name)}>Copy</button>\n              <button onClick={() => onCut(name)}>Cut</button>\n              <button onClick={() => onDelete(name)}>Delete</button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nconst FolderComponent = ({\n  name,\n  children,\n  onDelete,\n  onRename,\n  onPaste\n}) => {\n  const [newName, setNewName] = useState(name);\n  const [isRenaming, setIsRenaming] = useState(false);\n\n  const handleRename = () => {\n    onRename(name, newName);\n    setIsRenaming(false);\n  };\n\n  return (\n    <div style={{ marginLeft: '20px' }}>\n      {isRenaming ? (\n        <>\n          <input value={newName} onChange={(e) => setNewName(e.target.value)} />\n          <button onClick={handleRename}>Rename</button>\n          <button onClick={() => setIsRenaming(false)}>Cancel</button>\n        </>\n      ) : (\n        <>\n          <h2>{name}</h2>\n          <button onClick={() => setIsRenaming(true)}>Rename Folder</button>\n          <button onClick={() => onDelete(name)}>Delete Folder</button>\n          <button onClick={() => onPaste(name)}>Paste Here</button>\n          {children}\n        </>\n      )}\n    </div>\n  );\n};\n\nfunction App() {\n  const [fileSystem, setFileSystem] = useState(\n    JSON.parse(localStorage.getItem('fileSystem')) || {}\n  );\n  const [newItemName, setNewItemName] = useState('');\n  const [clipboard, setClipboard] = useState(\n    JSON.parse(localStorage.getItem('clipboard')) || null\n  );\n\n  useEffect(() => {\n    localStorage.setItem('fileSystem', JSON.stringify(fileSystem));\n  }, [fileSystem]);\n\n  useEffect(() => {\n    localStorage.setItem('clipboard', JSON.stringify(clipboard));\n  }, [clipboard]);\n\n  const addNewItem = (isFolder) => {\n    const newFileSystem = { ...fileSystem };\n    if (newFileSystem[newItemName]) {\n      alert('An item with this name already exists.');\n      return;\n    }\n    newFileSystem[newItemName] = isFolder ? {} : 'New content';\n    setFileSystem(newFileSystem);\n    setNewItemName('');\n  };\n\n  const updateFileContent = (fileName, content) => {\n    const newFileSystem = { ...fileSystem };\n    newFileSystem[fileName] = content;\n    setFileSystem(newFileSystem);\n  };\n\n  const deleteItem = (itemName) => {\n    const newFileSystem = { ...fileSystem };\n    delete newFileSystem[itemName];\n    setFileSystem(newFileSystem);\n    if (clipboard && clipboard.itemName === itemName) {\n      setClipboard(null);\n    }\n  };\n\n  const renameItem = (oldName, newName) => {\n    if (oldName !== newName && newName.trim() !== '') {\n      const newFileSystem = { ...fileSystem };\n      if (newFileSystem[newName]) {\n        alert('An item with this new name already exists.');\n        return;\n      }\n      newFileSystem[newName] = newFileSystem[oldName];\n      delete newFileSystem[oldName];\n      setFileSystem(newFileSystem);\n      if (clipboard && clipboard.itemName === oldName) {\n        setClipboard({ ...clipboard, itemName: newName });\n      }\n    }\n  };\n\n  const copyItem = (itemName) => {\n    setClipboard({ itemName, content: fileSystem[itemName], action: 'copy' });\n  };\n\n  const cutItem = (itemName) => {\n    setClipboard({ itemName, content: fileSystem[itemName], action: 'cut' });\n  };\n\n  const pasteItem = (targetFolderName) => {\n    if (!clipboard || !fileSystem[targetFolderName]) {\n      alert('Paste operation is not possible.');\n      return;\n    }\n    const { itemName, content, action } = clipboard;\n    const newFileSystem = { ...fileSystem };\n    if (newFileSystem[targetFolderName][itemName]) {\n      alert('An item with this name already exists in the target folder.');\n      return;\n    }\n    newFileSystem[targetFolderName][itemName] = content;\n    if (action === 'cut') {\n      delete newFileSystem[clipboard.itemName];\n      setClipboard(null);\n    }\n    setFileSystem(newFileSystem);\n  };\n\n  const renderFileSystem = (fs, path = '') => {\n    return Object.keys(fs).map((key) => {\n      const isFolder = typeof fs[key] === 'object';\n      const fullPath = path ? `${path}/${key}` : key;\n      return (\n        <ItemComponent\n          key={fullPath}\n          name={key}\n          isFolder={isFolder}\n          content={isFolder ? null : fs[key]}\n          onContentSave={isFolder ? null : updateFileContent}\n          onRename={renameItem}\n          onDelete={deleteItem}\n          onCopy={isFolder ? null : copyItem}\n          onCut={isFolder ? null : cutItem}\n          onPaste={isFolder ? pasteItem : null}\n        >\n          {isFolder && renderFileSystem(fs[key], fullPath)}\n        </ItemComponent>\n      );\n    });\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={newItemName}\n        onChange={(e) => setNewItemName(e.target.value)}\n        placeholder=\"Enter new item name\"\n      />\n      <button onClick={() => addNewItem(false)}>Add File</button>\n      <button onClick={() => addNewItem(true)}>Add Folder</button>\n      {clipboard && <button onClick={() => pasteItem('')}>Paste into root</button>}\n      <div style={{ marginTop: '20px' }}>\n        {renderFileSystem(fileSystem)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}