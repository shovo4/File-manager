{"ast":null,"code":"var _jsxFileName = \"/Users/shovo/Downloads/mini/my-file-browser/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FileComponent = ({\n  name,\n  content,\n  isFolder,\n  onContentSave,\n  onRename,\n  onDelete,\n  onCopy,\n  onCut\n}) => {\n  _s();\n  const [editContent, setEditContent] = useState(content);\n  const [isEditing, setIsEditing] = useState(false);\n  const [newName, setNewName] = useState(name);\n  const [isRenaming, setIsRenaming] = useState(false);\n  const handleSave = () => {\n    if (!isFolder) {\n      onContentSave(name, editContent);\n      setIsEditing(false);\n    }\n  };\n  const handleRename = () => {\n    onRename(name, newName);\n    setIsRenaming(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: '20px'\n    },\n    children: isRenaming ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newName,\n        onChange: e => setNewName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRename,\n        children: \"Rename\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsRenaming(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: editContent,\n          onChange: e => setEditContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsEditing(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsEditing(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsRenaming(true),\n          children: \"Rename\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onCopy(name),\n          children: \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onCut(name),\n          children: \"Cut\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onDelete(name),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(FileComponent, \"gIX5QOawCRsept225QaO33g6HUc=\");\n_c = FileComponent;\nconst FolderComponent = ({\n  name,\n  children,\n  onDelete,\n  onRename,\n  onPaste,\n  onAddFile,\n  onAddFolder\n}) => {\n  _s2();\n  const [isRenaming, setIsRenaming] = useState(false);\n  const [newName, setNewName] = useState(name);\n  const [isAddingFile, setIsAddingFile] = useState(false);\n  const [isAddingFolder, setIsAddingFolder] = useState(false);\n  const [newItemName, setNewItemName] = useState('');\n  const handleRename = () => {\n    onRename(name, newName, true);\n    setIsRenaming(false);\n  };\n  const handleAddFile = () => {\n    if (newItemName) {\n      onAddFile(newItemName);\n      setNewItemName('');\n      setIsAddingFile(false);\n    }\n  };\n  const handleAddFolder = () => {\n    if (newItemName) {\n      onAddFolder(newItemName);\n      setNewItemName('');\n      setIsAddingFolder(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: '20px'\n    },\n    children: isRenaming ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newName,\n        onChange: e => setNewName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRename,\n        children: \"Rename\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsRenaming(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsRenaming(true),\n        children: \"Rename Folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onDelete(name),\n        children: \"Delete Folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onPaste(name),\n        children: \"Paste Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), children, isAddingFile ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newItemName,\n          placeholder: \"New file name\",\n          onChange: e => setNewItemName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddFile,\n          children: \"Add File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsAddingFile(true),\n        children: \"Add File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), isAddingFolder ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newItemName,\n          placeholder: \"New folder name\",\n          onChange: e => setNewItemName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddFolder,\n          children: \"Add Folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsAddingFolder(true),\n        children: \"Add Folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s2(FolderComponent, \"Glgn3BSAF9Y/VCL/Sv77KPbxW3Y=\");\n_c2 = FolderComponent;\nfunction App() {\n  _s3();\n  const [fileSystem, setFileSystem] = useState(JSON.parse(localStorage.getItem('fileSystem')) || {\n    root: {\n      isFolder: true,\n      children: {}\n    }\n  });\n  const [newItemName, setNewItemName] = useState('');\n  const [clipboard, setClipboard] = useState(JSON.parse(localStorage.getItem('clipboard')) || null);\n  const [searchQuery, setSearchQuery] = useState('');\n  useEffect(() => {\n    localStorage.setItem('fileSystem', JSON.stringify(fileSystem));\n  }, [fileSystem]);\n  useEffect(() => {\n    localStorage.setItem('clipboard', JSON.stringify(clipboard));\n  }, [clipboard]);\n  const addNewItem = (parentPath, itemName, isFolder) => {\n    setFileSystem(prev => {\n      const newFileSystem = {\n        ...prev\n      };\n      let current = newFileSystem;\n      const path = parentPath.split('/');\n      path.forEach(part => {\n        if (!current[part]) current[part] = {\n          isFolder: true,\n          children: {}\n        };\n        current = current[part].children;\n      });\n      if (current[itemName]) {\n        alert('A file or folder with this name already exists.');\n        return {\n          ...prev\n        };\n      }\n      current[itemName] = isFolder ? {\n        isFolder: true,\n        children: {}\n      } : 'New content';\n      return newFileSystem;\n    });\n  };\n  const updateFileContent = (fileName, content) => {\n    const newFileSystem = {\n      ...fileSystem\n    };\n    newFileSystem[fileName] = content;\n    setFileSystem(newFileSystem);\n  };\n  const renameItem = (oldName, newName) => {\n    if (oldName !== newName) {\n      const newFileSystem = {\n        ...fileSystem\n      };\n      if (newFileSystem[newName]) {\n        alert('A file or folder with the new name already exists.');\n        return;\n      }\n      newFileSystem[newName] = newFileSystem[oldName];\n      delete newFileSystem[oldName];\n      setFileSystem(newFileSystem);\n    }\n  };\n  const deleteItem = itemName => {\n    const newFileSystem = {\n      ...fileSystem\n    };\n    delete newFileSystem[itemName];\n    setFileSystem(newFileSystem);\n  };\n  const copyItem = itemName => {\n    setClipboard({\n      itemName,\n      content: fileSystem[itemName],\n      action: 'copy'\n    });\n  };\n  const cutItem = itemName => {\n    setClipboard({\n      itemName,\n      content: fileSystem[itemName],\n      action: 'cut'\n    });\n  };\n  const pasteItem = targetFolderName => {\n    if (!clipboard) return;\n    const {\n      itemName,\n      content,\n      action\n    } = clipboard;\n    const newFileSystem = {\n      ...fileSystem\n    };\n    if (targetFolderName === '') {\n      // Paste into the root\n      if (newFileSystem[itemName]) {\n        alert('A file with the same name already exists in the root folder.');\n      } else {\n        newFileSystem[itemName] = content;\n      }\n    } else {\n      // Paste into a specific folder\n      if (newFileSystem[targetFolderName]) {\n        if (newFileSystem[targetFolderName][itemName]) {\n          alert('A file with the same name already exists in the target folder.');\n        } else {\n          newFileSystem[targetFolderName][itemName] = content;\n        }\n      } else {\n        newFileSystem[targetFolderName] = {\n          [itemName]: content\n        };\n      }\n    }\n\n    // Remove from clipboard if it was a cut operation\n    if (action === 'cut') {\n      setClipboard(null);\n    }\n    setFileSystem(newFileSystem);\n  };\n  const renderFileSystem = (fs, path = 'root') => {\n    return Object.entries(fs).map(([key, value]) => {\n      const newPath = path === 'root' ? key : `${path}/${key}`;\n      if (value.isFolder) {\n        return /*#__PURE__*/_jsxDEV(FolderComponent, {\n          name: key,\n          children: renderFileSystem(value.children, newPath),\n          onDelete: () => deleteItem(newPath),\n          onRename: (oldName, newName) => renameItem(oldName, newName, newPath),\n          onPaste: () => pasteItem(newPath),\n          onAddFile: itemName => addNewItem(newPath, itemName, false),\n          onAddFolder: itemName => addNewItem(newPath, itemName, true)\n        }, newPath, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(FileComponent, {\n          name: key,\n          content: value,\n          onContentSave: (name, content) => updateFileContent(name, content, newPath),\n          onRename: (oldName, newName) => renameItem(oldName, newName, newPath),\n          onDelete: () => deleteItem(newPath),\n          onCopy: () => copyItem(newPath),\n          onCut: () => cutItem(newPath)\n        }, newPath, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchQuery,\n      onChange: e => setSearchQuery(e.target.value),\n      placeholder: \"Search files and folders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newItemName,\n      placeholder: \"New file or folder name\",\n      onChange: e => setNewItemName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addNewItem(true),\n      children: \"Add Folder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addNewItem(false),\n      children: \"Add File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), clipboard && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => pasteItem(''),\n      children: \"Paste into root\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: renderFileSystem(fileSystem)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 5\n  }, this);\n}\n_s3(App, \"bkELK1cx/yQyfeFjcFm3VFNAFfU=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"FileComponent\");\n$RefreshReg$(_c2, \"FolderComponent\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","FileComponent","name","content","isFolder","onContentSave","onRename","onDelete","onCopy","onCut","_s","editContent","setEditContent","isEditing","setIsEditing","newName","setNewName","isRenaming","setIsRenaming","handleSave","handleRename","style","marginBottom","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","FolderComponent","onPaste","onAddFile","onAddFolder","_s2","isAddingFile","setIsAddingFile","isAddingFolder","setIsAddingFolder","newItemName","setNewItemName","handleAddFile","handleAddFolder","marginLeft","type","placeholder","_c2","App","_s3","fileSystem","setFileSystem","JSON","parse","localStorage","getItem","root","clipboard","setClipboard","searchQuery","setSearchQuery","setItem","stringify","addNewItem","parentPath","itemName","prev","newFileSystem","current","path","split","forEach","part","alert","updateFileContent","renameItem","oldName","deleteItem","copyItem","action","cutItem","pasteItem","targetFolderName","renderFileSystem","fs","Object","entries","map","key","newPath","marginTop","_c3","$RefreshReg$"],"sources":["/Users/shovo/Downloads/mini/my-file-browser/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst FileComponent = ({ name, content, isFolder, onContentSave, onRename, onDelete, onCopy, onCut }) => {\n  const [editContent, setEditContent] = useState(content);\n  const [isEditing, setIsEditing] = useState(false);\n  const [newName, setNewName] = useState(name);\n  const [isRenaming, setIsRenaming] = useState(false);\n\n  const handleSave = () => {\n    if (!isFolder) {\n      onContentSave(name, editContent);\n      setIsEditing(false);\n    }\n  };\n\n  const handleRename = () => {\n    onRename(name, newName);\n    setIsRenaming(false);\n  };\n\n  return (\n    <div style={{ marginBottom: '20px' }}>\n      {isRenaming ? (\n        <>\n          <input value={newName} onChange={(e) => setNewName(e.target.value)} />\n          <button onClick={handleRename}>Rename</button>\n          <button onClick={() => setIsRenaming(false)}>Cancel</button>\n        </>\n      ) : (\n        <>\n          <h3>{name}</h3>\n          {isEditing ? (\n            <>\n              <textarea value={editContent} onChange={(e) => setEditContent(e.target.value)} />\n              <button onClick={handleSave}>Save</button>\n              <button onClick={() => setIsEditing(false)}>Cancel</button>\n            </>\n          ) : (\n            <>\n              <button onClick={() => setIsEditing(true)}>Edit</button>\n              <button onClick={() => setIsRenaming(true)}>Rename</button>\n              <button onClick={() => onCopy(name)}>Copy</button>\n              <button onClick={() => onCut(name)}>Cut</button>\n              <button onClick={() => onDelete(name)}>Delete</button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nconst FolderComponent = ({ name, children, onDelete, onRename, onPaste, onAddFile, onAddFolder }) => {\n  const [isRenaming, setIsRenaming] = useState(false);\n  const [newName, setNewName] = useState(name);\n  const [isAddingFile, setIsAddingFile] = useState(false);\n  const [isAddingFolder, setIsAddingFolder] = useState(false);\n  const [newItemName, setNewItemName] = useState('');\n\n  const handleRename = () => {\n    onRename(name, newName, true);\n    setIsRenaming(false);\n  };\n\n  const handleAddFile = () => {\n    if (newItemName) {\n      onAddFile(newItemName);\n      setNewItemName('');\n      setIsAddingFile(false);\n    }\n  };\n\n  const handleAddFolder = () => {\n    if (newItemName) {\n      onAddFolder(newItemName);\n      setNewItemName('');\n      setIsAddingFolder(false);\n    }\n  };\n\n  return (\n    <div style={{ marginLeft: '20px' }}>\n      {isRenaming ? (\n        <>\n          <input value={newName} onChange={(e) => setNewName(e.target.value)} />\n          <button onClick={handleRename}>Rename</button>\n          <button onClick={() => setIsRenaming(false)}>Cancel</button>\n        </>\n      ) : (\n        <>\n          <h2>{name}</h2>\n          <button onClick={() => setIsRenaming(true)}>Rename Folder</button>\n          <button onClick={() => onDelete(name)}>Delete Folder</button>\n          <button onClick={() => onPaste(name)}>Paste Here</button>\n          {children}\n          {isAddingFile ? (\n            <>\n              <input\n                type=\"text\"\n                value={newItemName}\n                placeholder=\"New file name\"\n                onChange={(e) => setNewItemName(e.target.value)}\n              />\n              <button onClick={handleAddFile}>Add File</button>\n            </>\n          ) : (\n            <button onClick={() => setIsAddingFile(true)}>Add File</button>\n          )}\n          {isAddingFolder ? (\n            <>\n              <input\n                type=\"text\"\n                value={newItemName}\n                placeholder=\"New folder name\"\n                onChange={(e) => setNewItemName(e.target.value)}\n              />\n              <button onClick={handleAddFolder}>Add Folder</button>\n            </>\n          ) : (\n            <button onClick={() => setIsAddingFolder(true)}>Add Folder</button>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\nfunction App() {\n  const [fileSystem, setFileSystem] = useState(\n    JSON.parse(localStorage.getItem('fileSystem')) || { root: { isFolder: true, children: {} } }\n  );\n\n  const [newItemName, setNewItemName] = useState('');\n  const [clipboard, setClipboard] = useState(\n    JSON.parse(localStorage.getItem('clipboard')) || null\n  );\n  const [searchQuery, setSearchQuery] = useState('');\n\n  useEffect(() => {\n    localStorage.setItem('fileSystem', JSON.stringify(fileSystem));\n  }, [fileSystem]);\n\n  useEffect(() => {\n    localStorage.setItem('clipboard', JSON.stringify(clipboard));\n  }, [clipboard]);\n\n  const addNewItem = (parentPath, itemName, isFolder) => {\n    setFileSystem(prev => {\n      const newFileSystem = { ...prev };\n      let current = newFileSystem;\n\n      const path = parentPath.split('/');\n      path.forEach(part => {\n        if (!current[part]) current[part] = { isFolder: true, children: {} };\n        current = current[part].children;\n      });\n\n      if (current[itemName]) {\n        alert('A file or folder with this name already exists.');\n        return { ...prev };\n      }\n\n      current[itemName] = isFolder ? { isFolder: true, children: {} } : 'New content';\n      return newFileSystem;\n    });\n  };\n\n\n  const updateFileContent = (fileName, content) => {\n    const newFileSystem = { ...fileSystem };\n    newFileSystem[fileName] = content;\n    setFileSystem(newFileSystem);\n  };\n\n  const renameItem = (oldName, newName) => {\n    if (oldName !== newName) {\n      const newFileSystem = { ...fileSystem };\n      if (newFileSystem[newName]) {\n        alert('A file or folder with the new name already exists.');\n        return;\n      }\n      newFileSystem[newName] = newFileSystem[oldName];\n      delete newFileSystem[oldName];\n      setFileSystem(newFileSystem);\n    }\n  };\n\n  const deleteItem = (itemName) => {\n    const newFileSystem = { ...fileSystem };\n    delete newFileSystem[itemName];\n    setFileSystem(newFileSystem);\n  };\n\n  const copyItem = (itemName) => {\n    setClipboard({ itemName, content: fileSystem[itemName], action: 'copy' });\n  };\n\n  const cutItem = (itemName) => {\n    setClipboard({ itemName, content: fileSystem[itemName], action: 'cut' });\n  };\n\n  const pasteItem = (targetFolderName) => {\n    if (!clipboard) return;\n  \n    const { itemName, content, action } = clipboard;\n    const newFileSystem = { ...fileSystem };\n  \n    if (targetFolderName === '') {\n      // Paste into the root\n      if (newFileSystem[itemName]) {\n        alert('A file with the same name already exists in the root folder.');\n      } else {\n        newFileSystem[itemName] = content;\n      }\n    } else {\n      // Paste into a specific folder\n      if (newFileSystem[targetFolderName]) {\n        if (newFileSystem[targetFolderName][itemName]) {\n          alert('A file with the same name already exists in the target folder.');\n        } else {\n          newFileSystem[targetFolderName][itemName] = content;\n        }\n      } else {\n        newFileSystem[targetFolderName] = { [itemName]: content };\n      }\n    }\n  \n    // Remove from clipboard if it was a cut operation\n    if (action === 'cut') {\n      setClipboard(null);\n    }\n  \n    setFileSystem(newFileSystem);\n  };\n\n  const renderFileSystem = (fs, path = 'root') => {\n    return Object.entries(fs).map(([key, value]) => {\n      const newPath = path === 'root' ? key : `${path}/${key}`;\n      if (value.isFolder) {\n        return (\n          <FolderComponent\n            key={newPath}\n            name={key}\n            children={renderFileSystem(value.children, newPath)}\n            onDelete={() => deleteItem(newPath)}\n            onRename={(oldName, newName) => renameItem(oldName, newName, newPath)}\n            onPaste={() => pasteItem(newPath)}\n            onAddFile={(itemName) => addNewItem(newPath, itemName, false)}\n            onAddFolder={(itemName) => addNewItem(newPath, itemName, true)}\n          />\n        );\n      } else {\n        return (\n          <FileComponent\n            key={newPath}\n            name={key}\n            content={value}\n            onContentSave={(name, content) => updateFileContent(name, content, newPath)}\n            onRename={(oldName, newName) => renameItem(oldName, newName, newPath)}\n            onDelete={() => deleteItem(newPath)}\n            onCopy={() => copyItem(newPath)}\n            onCut={() => cutItem(newPath)}\n          />\n        );\n      }\n    });\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={searchQuery}\n        onChange={(e) => setSearchQuery(e.target.value)}\n        placeholder=\"Search files and folders\"\n      />\n      <input\n        type=\"text\"\n        value={newItemName}\n        placeholder=\"New file or folder name\"\n        onChange={(e) => setNewItemName(e.target.value)}\n      />\n      <button onClick={() => addNewItem(true)}>Add Folder</button>\n      <button onClick={() => addNewItem(false)}>Add File</button>\n      {clipboard && (\n        <button onClick={() => pasteItem('')}>Paste into root</button>\n      )}\n      <div style={{ marginTop: '20px' }}>\n        {renderFileSystem(fileSystem)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}