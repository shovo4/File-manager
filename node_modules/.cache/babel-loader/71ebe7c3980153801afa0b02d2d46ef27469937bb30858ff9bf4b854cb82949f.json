{"ast":null,"code":"var _jsxFileName = \"/Users/shovo/Downloads/mini/my-file-browser/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FileComponent = ({\n  name,\n  content,\n  isFolder,\n  onContentSave,\n  onRename,\n  onDelete,\n  onCopy,\n  onCut\n}) => {\n  _s();\n  const [editContent, setEditContent] = useState(content);\n  const [isEditing, setIsEditing] = useState(false);\n  const [newName, setNewName] = useState(name);\n  const [isRenaming, setIsRenaming] = useState(false);\n  const handleSave = () => {\n    if (!isFolder) {\n      onContentSave(name, editContent);\n      setIsEditing(false);\n    }\n  };\n  const handleRename = () => {\n    onRename(name, newName);\n    setIsRenaming(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: '20px'\n    },\n    children: isRenaming ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newName,\n        onChange: e => setNewName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRename,\n        children: \"Rename\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsRenaming(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: editContent,\n          onChange: e => setEditContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsEditing(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsEditing(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsRenaming(true),\n          children: \"Rename\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onCopy(name),\n          children: \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onCut(name),\n          children: \"Cut\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onDelete(name),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(FileComponent, \"gIX5QOawCRsept225QaO33g6HUc=\");\n_c = FileComponent;\nconst FolderComponent = ({\n  name,\n  children,\n  onDelete,\n  onPaste,\n  onRename,\n  onOptions\n}) => {\n  _s2();\n  const [isRenaming, setIsRenaming] = useState(false);\n  const [newName, setNewName] = useState(name);\n  const [showOptions, setShowOptions] = useState(false);\n  const handleRename = () => {\n    onRename(name, newName);\n    setIsRenaming(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: '20px',\n      cursor: 'pointer'\n    },\n    onClick: () => setShowOptions(!showOptions),\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), showOptions && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isRenaming ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: newName,\n          onChange: e => setNewName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRename,\n          children: \"Rename\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsRenaming(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onDelete(name),\n          children: \"Delete Folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onPaste(name),\n          children: \"Paste Here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsRenaming(true),\n          children: \"Rename\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this), children]\n      }, void 0, true)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s2(FolderComponent, \"5TgBth1L64d0IFl3UCP+VC1ukAg=\");\n_c2 = FolderComponent;\nfunction App() {\n  _s3();\n  const [fileSystem, setFileSystem] = useState(JSON.parse(localStorage.getItem('fileSystem')) || {});\n  const [newItemName, setNewItemName] = useState('');\n  const [clipboard, setClipboard] = useState(JSON.parse(localStorage.getItem('clipboard')) || null);\n  const [searchQuery, setSearchQuery] = useState('');\n  useEffect(() => {\n    localStorage.setItem('fileSystem', JSON.stringify(fileSystem));\n  }, [fileSystem]);\n  useEffect(() => {\n    localStorage.setItem('clipboard', JSON.stringify(clipboard));\n  }, [clipboard]);\n  const addNewItem = isFolder => {\n    const newFileSystem = {\n      ...fileSystem\n    };\n    if (newFileSystem[newItemName]) {\n      alert('A file or folder with this name already exists.');\n      return;\n    }\n    const content = isFolder ? {} : 'New content';\n    newFileSystem[newItemName] = content;\n    setFileSystem(newFileSystem);\n    setNewItemName('');\n  };\n  const updateFileContent = (fileName, content) => {\n    const newFileSystem = {\n      ...fileSystem\n    };\n    newFileSystem[fileName] = content;\n    setFileSystem(newFileSystem);\n  };\n  const renameItem = (oldName, newName) => {\n    if (oldName !== newName) {\n      const newFileSystem = {\n        ...fileSystem\n      };\n      if (newFileSystem[newName]) {\n        alert('A file or folder with the new name already exists.');\n        return;\n      }\n      newFileSystem[newName] = newFileSystem[oldName];\n      delete newFileSystem[oldName];\n      setFileSystem(newFileSystem);\n    }\n  };\n  const deleteItem = itemName => {\n    const newFileSystem = {\n      ...fileSystem\n    };\n    delete newFileSystem[itemName];\n    setFileSystem(newFileSystem);\n  };\n  const copyItem = itemName => {\n    setClipboard({\n      itemName,\n      content: fileSystem[itemName],\n      action: 'copy'\n    });\n  };\n  const cutItem = itemName => {\n    setClipboard({\n      itemName,\n      content: fileSystem[itemName],\n      action: 'cut'\n    });\n  };\n  const pasteItem = targetFolderName => {\n    if (!clipboard) return;\n    const {\n      itemName,\n      content,\n      action\n    } = clipboard;\n    const newFileSystem = {\n      ...fileSystem\n    };\n    if (targetFolderName === '') {\n      // Paste into the root\n      if (newFileSystem[itemName]) {\n        alert('A file with the same name already exists in the root folder.');\n      } else {\n        newFileSystem[itemName] = content;\n      }\n    } else {\n      // Paste into a specific folder\n      if (newFileSystem[targetFolderName]) {\n        if (newFileSystem[targetFolderName][itemName]) {\n          alert('A file with the same name already exists in the target folder.');\n        } else {\n          newFileSystem[targetFolderName][itemName] = content;\n        }\n      } else {\n        newFileSystem[targetFolderName] = {\n          [itemName]: content\n        };\n      }\n    }\n\n    // Remove from clipboard if it was a cut operation\n    if (action === 'cut') {\n      setClipboard(null);\n    }\n    setFileSystem(newFileSystem);\n  };\n  const renderFileSystem = fs => {\n    const filteredItems = Object.keys(fs).filter(key => {\n      return key.toLowerCase().includes(searchQuery.toLowerCase());\n    });\n    return filteredItems.map(key => {\n      if (typeof fs[key] === 'object' && fs[key] !== null && !(fs[key] instanceof Array)) {\n        return /*#__PURE__*/_jsxDEV(FolderComponent, {\n          name: key,\n          onDelete: () => deleteItem(key),\n          onPaste: () => pasteItem(key),\n          onRename: (oldName, newName) => renameItem(oldName, newName) // Pass onRename here\n          ,\n          children: renderFileSystem(fs[key])\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(FileComponent, {\n          name: key,\n          content: fs[key],\n          onContentSave: (name, content) => updateFileContent(name, content),\n          onRename: (oldName, newName) => renameItem(oldName, newName),\n          onDelete: () => deleteItem(key),\n          onCopy: () => copyItem(key),\n          onCut: () => cutItem(key)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchQuery,\n      onChange: e => setSearchQuery(e.target.value),\n      placeholder: \"Search files and folders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newItemName,\n      placeholder: \"New file or folder name\",\n      onChange: e => setNewItemName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addNewItem(true),\n      children: \"Add Folder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addNewItem(false),\n      children: \"Add File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), clipboard && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => pasteItem(''),\n      children: \"Paste into root\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: renderFileSystem(fileSystem)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n}\n_s3(App, \"it4KKUsToe9dLJw/adh7GohEBno=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"FileComponent\");\n$RefreshReg$(_c2, \"FolderComponent\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","FileComponent","name","content","isFolder","onContentSave","onRename","onDelete","onCopy","onCut","_s","editContent","setEditContent","isEditing","setIsEditing","newName","setNewName","isRenaming","setIsRenaming","handleSave","handleRename","style","marginBottom","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","FolderComponent","onPaste","onOptions","_s2","showOptions","setShowOptions","marginLeft","cursor","_c2","App","_s3","fileSystem","setFileSystem","JSON","parse","localStorage","getItem","newItemName","setNewItemName","clipboard","setClipboard","searchQuery","setSearchQuery","setItem","stringify","addNewItem","newFileSystem","alert","updateFileContent","renameItem","oldName","deleteItem","itemName","copyItem","action","cutItem","pasteItem","targetFolderName","renderFileSystem","fs","filteredItems","Object","keys","filter","key","toLowerCase","includes","map","Array","type","placeholder","marginTop","_c3","$RefreshReg$"],"sources":["/Users/shovo/Downloads/mini/my-file-browser/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst FileComponent = ({\n  name,\n  content,\n  isFolder,\n  onContentSave,\n  onRename,\n  onDelete,\n  onCopy,\n  onCut,\n}) => {\n  const [editContent, setEditContent] = useState(content);\n  const [isEditing, setIsEditing] = useState(false);\n  const [newName, setNewName] = useState(name);\n  const [isRenaming, setIsRenaming] = useState(false);\n\n  const handleSave = () => {\n    if (!isFolder) {\n      onContentSave(name, editContent);\n      setIsEditing(false);\n    }\n  };\n\n  const handleRename = () => {\n    onRename(name, newName);\n    setIsRenaming(false);\n  };\n\n  return (\n    <div style={{ marginBottom: '20px' }}>\n      {isRenaming ? (\n        <>\n          <input value={newName} onChange={(e) => setNewName(e.target.value)} />\n          <button onClick={handleRename}>Rename</button>\n          <button onClick={() => setIsRenaming(false)}>Cancel</button>\n        </>\n      ) : (\n        <>\n          <h3>{name}</h3>\n          {isEditing ? (\n            <>\n              <textarea value={editContent} onChange={(e) => setEditContent(e.target.value)} />\n              <button onClick={handleSave}>Save</button>\n              <button onClick={() => setIsEditing(false)}>Cancel</button>\n            </>\n          ) : (\n            <>\n              <button onClick={() => setIsEditing(true)}>Edit</button>\n              <button onClick={() => setIsRenaming(true)}>Rename</button>\n              <button onClick={() => onCopy(name)}>Copy</button>\n              <button onClick={() => onCut(name)}>Cut</button>\n              <button onClick={() => onDelete(name)}>Delete</button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nconst FolderComponent = ({\n  name,\n  children,\n  onDelete,\n  onPaste,\n  onRename,\n  onOptions,\n}) => {\n  const [isRenaming, setIsRenaming] = useState(false);\n  const [newName, setNewName] = useState(name);\n  const [showOptions, setShowOptions] = useState(false);\n\n  const handleRename = () => {\n    onRename(name, newName);\n    setIsRenaming(false);\n  };\n\n  return (\n    <div\n      style={{ marginLeft: '20px', cursor: 'pointer' }}\n      onClick={() => setShowOptions(!showOptions)}\n    >\n      <h2>{name}</h2>\n      {showOptions && (\n        <>\n          {isRenaming ? (\n            <>\n              <input value={newName} onChange={(e) => setNewName(e.target.value)} />\n              <button onClick={handleRename}>Rename</button>\n              <button onClick={() => setIsRenaming(false)}>Cancel</button>\n            </>\n          ) : (\n            <>\n              <button onClick={() => onDelete(name)}>Delete Folder</button>\n              <button onClick={() => onPaste(name)}>Paste Here</button>\n              <button onClick={() => setIsRenaming(true)}>Rename</button>\n              {children}\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\n\nfunction App() {\n  const [fileSystem, setFileSystem] = useState(\n    JSON.parse(localStorage.getItem('fileSystem')) || {}\n  );\n  const [newItemName, setNewItemName] = useState('');\n  const [clipboard, setClipboard] = useState(\n    JSON.parse(localStorage.getItem('clipboard')) || null\n  );\n  const [searchQuery, setSearchQuery] = useState('');\n\n  useEffect(() => {\n    localStorage.setItem('fileSystem', JSON.stringify(fileSystem));\n  }, [fileSystem]);\n\n  useEffect(() => {\n    localStorage.setItem('clipboard', JSON.stringify(clipboard));\n  }, [clipboard]);\n\n  const addNewItem = (isFolder) => {\n    const newFileSystem = { ...fileSystem };\n    if (newFileSystem[newItemName]) {\n      alert('A file or folder with this name already exists.');\n      return;\n    }\n    const content = isFolder ? {} : 'New content';\n    newFileSystem[newItemName] = content;\n    setFileSystem(newFileSystem);\n    setNewItemName('');\n  };\n\n  const updateFileContent = (fileName, content) => {\n    const newFileSystem = { ...fileSystem };\n    newFileSystem[fileName] = content;\n    setFileSystem(newFileSystem);\n  };\n\n  const renameItem = (oldName, newName) => {\n    if (oldName !== newName) {\n      const newFileSystem = { ...fileSystem };\n      if (newFileSystem[newName]) {\n        alert('A file or folder with the new name already exists.');\n        return;\n      }\n      newFileSystem[newName] = newFileSystem[oldName];\n      delete newFileSystem[oldName];\n      setFileSystem(newFileSystem);\n    }\n  };\n\n  const deleteItem = (itemName) => {\n    const newFileSystem = { ...fileSystem };\n    delete newFileSystem[itemName];\n    setFileSystem(newFileSystem);\n  };\n\n  const copyItem = (itemName) => {\n    setClipboard({ itemName, content: fileSystem[itemName], action: 'copy' });\n  };\n\n  const cutItem = (itemName) => {\n    setClipboard({ itemName, content: fileSystem[itemName], action: 'cut' });\n  };\n\n  const pasteItem = (targetFolderName) => {\n    if (!clipboard) return;\n  \n    const { itemName, content, action } = clipboard;\n    const newFileSystem = { ...fileSystem };\n  \n    if (targetFolderName === '') {\n      // Paste into the root\n      if (newFileSystem[itemName]) {\n        alert('A file with the same name already exists in the root folder.');\n      } else {\n        newFileSystem[itemName] = content;\n      }\n    } else {\n      // Paste into a specific folder\n      if (newFileSystem[targetFolderName]) {\n        if (newFileSystem[targetFolderName][itemName]) {\n          alert('A file with the same name already exists in the target folder.');\n        } else {\n          newFileSystem[targetFolderName][itemName] = content;\n        }\n      } else {\n        newFileSystem[targetFolderName] = { [itemName]: content };\n      }\n    }\n  \n    // Remove from clipboard if it was a cut operation\n    if (action === 'cut') {\n      setClipboard(null);\n    }\n  \n    setFileSystem(newFileSystem);\n  };\n  \n\n  const renderFileSystem = (fs) => {\n    const filteredItems = Object.keys(fs).filter((key) => {\n      return key.toLowerCase().includes(searchQuery.toLowerCase());\n    });\n    return filteredItems.map((key) => {\n      if (typeof fs[key] === 'object' && fs[key] !== null && !(fs[key] instanceof Array)) {\n        return (\n          <FolderComponent\n            key={key}\n            name={key}\n            onDelete={() => deleteItem(key)}\n            onPaste={() => pasteItem(key)}\n            onRename={(oldName, newName) => renameItem(oldName, newName)} // Pass onRename here\n          >\n            {renderFileSystem(fs[key])}\n          </FolderComponent>\n        );\n      } else {\n        return (\n          <FileComponent\n            key={key}\n            name={key}\n            content={fs[key]}\n            onContentSave={(name, content) => updateFileContent(name, content)}\n            onRename={(oldName, newName) => renameItem(oldName, newName)}\n            onDelete={() => deleteItem(key)}\n            onCopy={() => copyItem(key)}\n            onCut={() => cutItem(key)}\n          />\n        );\n      }\n    });\n  };\n  \n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={searchQuery}\n        onChange={(e) => setSearchQuery(e.target.value)}\n        placeholder=\"Search files and folders\"\n      />\n      <input\n        type=\"text\"\n        value={newItemName}\n        placeholder=\"New file or folder name\"\n        onChange={(e) => setNewItemName(e.target.value)}\n      />\n      <button onClick={() => addNewItem(true)}>Add Folder</button>\n      <button onClick={() => addNewItem(false)}>Add File</button>\n      {clipboard && (\n        <button onClick={() => pasteItem('')}>Paste into root</button>\n      )}\n      <div style={{ marginTop: '20px' }}>\n        {renderFileSystem(fileSystem)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}