{"ast":null,"code":"var _jsxFileName = \"/Users/shovo/Downloads/mini/my-file-browser/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FileComponent = ({\n  name,\n  content,\n  isFolder,\n  onContentSave,\n  onRename,\n  onDelete,\n  onCopy,\n  onCut,\n  onPaste\n}) => {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [isRenaming, setIsRenaming] = useState(false);\n  const [editContent, setEditContent] = useState(content);\n  const [newName, setNewName] = useState(name);\n  const handleSave = () => {\n    if (!isFolder) {\n      onContentSave(name, editContent);\n      setIsEditing(false);\n    }\n  };\n  const handleRename = () => {\n    onRename(name, newName, isFolder);\n    setIsRenaming(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '10px 0',\n      paddingLeft: isFolder ? '20px' : '40px'\n    },\n    children: [isRenaming ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newName,\n        onChange: e => setNewName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRename,\n        children: \"Rename\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsRenaming(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsRenaming(true),\n        children: \"Rename\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onDelete(name, isFolder),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), isFolder && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onPaste(name),\n        children: \"Paste Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 24\n      }, this), !isFolder && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsEditing(true),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this), !isFolder && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onCopy(name),\n        children: \"Copy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this), !isFolder && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onCut(name),\n        children: \"Cut\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true), isEditing && !isFolder && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: editContent,\n        onChange: e => setEditContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsEditing(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(FileComponent, \"t+Jmcp/QxExr25n2fpNSijUyQv8=\");\n_c = FileComponent;\nfunction App() {\n  _s2();\n  const [fileSystem, setFileSystem] = useState(JSON.parse(localStorage.getItem('fileSystem')) || {});\n  const [newItemName, setNewItemName] = useState('');\n  const [clipboard, setClipboard] = useState(JSON.parse(localStorage.getItem('clipboard')) || null);\n  const [searchQuery, setSearchQuery] = useState('');\n  useEffect(() => {\n    localStorage.setItem('fileSystem', JSON.stringify(fileSystem));\n  }, [fileSystem]);\n  useEffect(() => {\n    localStorage.setItem('clipboard', JSON.stringify(clipboard));\n  }, [clipboard]);\n  const addNewItem = isFolder => {\n    const newFileSystem = {\n      ...fileSystem\n    };\n    if (newFileSystem[newItemName]) {\n      alert('A file or folder with this name already exists.');\n      return;\n    }\n    const content = isFolder ? {} : 'New content';\n    newFileSystem[newItemName] = content;\n    setFileSystem(newFileSystem);\n    setNewItemName('');\n  };\n  const updateFileContent = (fileName, content) => {\n    const newFileSystem = {\n      ...fileSystem\n    };\n    newFileSystem[fileName] = content;\n    setFileSystem(newFileSystem);\n  };\n  const renameItem = (oldName, newName) => {\n    if (oldName !== newName) {\n      const newFileSystem = {\n        ...fileSystem\n      };\n      if (newFileSystem[newName]) {\n        alert('A file or folder with the new name already exists.');\n        return;\n      }\n      newFileSystem[newName] = newFileSystem[oldName];\n      delete newFileSystem[oldName];\n      setFileSystem(newFileSystem);\n    }\n  };\n  const deleteItem = itemName => {\n    const newFileSystem = {\n      ...fileSystem\n    };\n    delete newFileSystem[itemName];\n    setFileSystem(newFileSystem);\n  };\n  const copyItem = itemName => {\n    setClipboard({\n      itemName,\n      content: fileSystem[itemName],\n      action: 'copy'\n    });\n  };\n  const cutItem = itemName => {\n    setClipboard({\n      itemName,\n      content: fileSystem[itemName],\n      action: 'cut'\n    });\n  };\n  const pasteItem = targetFolderName => {\n    if (!clipboard) return;\n    const {\n      itemName,\n      content,\n      action\n    } = clipboard;\n    const newFileSystem = {\n      ...fileSystem\n    };\n    if (action === 'cut') {\n      if (newFileSystem[targetFolderName]) {\n        newFileSystem[targetFolderName][itemName] = content;\n        delete newFileSystem[clipboard.itemName];\n      } else {\n        newFileSystem[targetFolderName] = {\n          [itemName]: content\n        };\n      }\n    } else if (action === 'copy') {\n      if (newFileSystem[targetFolderName]) {\n        newFileSystem[targetFolderName][itemName] = content;\n      } else {\n        newFileSystem[targetFolderName] = {\n          [itemName]: content\n        };\n      }\n    }\n    setFileSystem(newFileSystem);\n    if (action === 'cut') {\n      setClipboard(null);\n    }\n  };\n  const renderFileSystem = fs => {\n    return Object.keys(fs).map(key => {\n      if (typeof fs[key] === 'object' && fs[key] !== null && !(fs[key] instanceof Array)) {\n        return /*#__PURE__*/_jsxDEV(FolderComponent, {\n          name: key,\n          onDelete: () => deleteItem(key),\n          onPaste: () => pasteItem(key),\n          children: renderFileSystem(fs[key])\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(FileComponent, {\n          name: key,\n          content: fs[key],\n          onContentSave: (name, content) => updateFileContent(name, content),\n          onRename: (oldName, newName) => renameItem(oldName, newName),\n          onDelete: () => deleteItem(key),\n          onCopy: () => copyItem(key),\n          onCut: () => cutItem(key)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchQuery,\n      onChange: e => setSearchQuery(e.target.value),\n      placeholder: \"Search files and folders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newItemName,\n      onChange: e => setNewItemName(e.target.value),\n      placeholder: \"Enter new item name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addNewItem(true),\n      children: \"Add Folder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addNewItem(false),\n      children: \"Add File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), clipboard && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => pasteItem(''),\n      children: \"Paste into root\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: renderFileSystem(fileSystem)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"it4KKUsToe9dLJw/adh7GohEBno=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"FileComponent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","FileComponent","name","content","isFolder","onContentSave","onRename","onDelete","onCopy","onCut","onPaste","_s","isEditing","setIsEditing","isRenaming","setIsRenaming","editContent","setEditContent","newName","setNewName","handleSave","handleRename","style","margin","paddingLeft","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","App","_s2","fileSystem","setFileSystem","JSON","parse","localStorage","getItem","newItemName","setNewItemName","clipboard","setClipboard","searchQuery","setSearchQuery","setItem","stringify","addNewItem","newFileSystem","alert","updateFileContent","renameItem","oldName","deleteItem","itemName","copyItem","action","cutItem","pasteItem","targetFolderName","renderFileSystem","fs","Object","keys","map","key","Array","FolderComponent","type","placeholder","marginTop","_c2","$RefreshReg$"],"sources":["/Users/shovo/Downloads/mini/my-file-browser/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst FileComponent = ({\n  name,\n  content,\n  isFolder,\n  onContentSave,\n  onRename,\n  onDelete,\n  onCopy,\n  onCut,\n  onPaste\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [isRenaming, setIsRenaming] = useState(false);\n  const [editContent, setEditContent] = useState(content);\n  const [newName, setNewName] = useState(name);\n\n  const handleSave = () => {\n    if (!isFolder) {\n      onContentSave(name, editContent);\n      setIsEditing(false);\n    }\n  };\n\n  const handleRename = () => {\n    onRename(name, newName, isFolder);\n    setIsRenaming(false);\n  };\n\n  return (\n    <div style={{ margin: '10px 0', paddingLeft: isFolder ? '20px' : '40px' }}>\n      {isRenaming ? (\n        <>\n          <input value={newName} onChange={(e) => setNewName(e.target.value)} />\n          <button onClick={handleRename}>Rename</button>\n          <button onClick={() => setIsRenaming(false)}>Cancel</button>\n        </>\n      ) : (\n        <>\n          <h3>{name}</h3>\n          <button onClick={() => setIsRenaming(true)}>Rename</button>\n          <button onClick={() => onDelete(name, isFolder)}>Delete</button>\n          {isFolder && <button onClick={() => onPaste(name)}>Paste Here</button>}\n          {!isFolder && <button onClick={() => setIsEditing(true)}>Edit</button>}\n          {!isFolder && <button onClick={() => onCopy(name)}>Copy</button>}\n          {!isFolder && <button onClick={() => onCut(name)}>Cut</button>}\n        </>\n      )}\n      {isEditing && !isFolder && (\n        <>\n          <textarea value={editContent} onChange={(e) => setEditContent(e.target.value)} />\n          <button onClick={handleSave}>Save</button>\n          <button onClick={() => setIsEditing(false)}>Cancel</button>\n        </>\n      )}\n    </div>\n  );\n};\n\nfunction App() {\n  const [fileSystem, setFileSystem] = useState(\n    JSON.parse(localStorage.getItem('fileSystem')) || {}\n  );\n  const [newItemName, setNewItemName] = useState('');\n  const [clipboard, setClipboard] = useState(\n    JSON.parse(localStorage.getItem('clipboard')) || null\n  );\n  const [searchQuery, setSearchQuery] = useState('');\n\n  useEffect(() => {\n    localStorage.setItem('fileSystem', JSON.stringify(fileSystem));\n  }, [fileSystem]);\n\n  useEffect(() => {\n    localStorage.setItem('clipboard', JSON.stringify(clipboard));\n  }, [clipboard]);\n\n  const addNewItem = (isFolder) => {\n    const newFileSystem = { ...fileSystem };\n    if (newFileSystem[newItemName]) {\n      alert('A file or folder with this name already exists.');\n      return;\n    }\n    const content = isFolder ? {} : 'New content';\n    newFileSystem[newItemName] = content;\n    setFileSystem(newFileSystem);\n    setNewItemName('');\n  };\n\n  const updateFileContent = (fileName, content) => {\n    const newFileSystem = { ...fileSystem };\n    newFileSystem[fileName] = content;\n    setFileSystem(newFileSystem);\n  };\n\n  const renameItem = (oldName, newName) => {\n    if (oldName !== newName) {\n      const newFileSystem = { ...fileSystem };\n      if (newFileSystem[newName]) {\n        alert('A file or folder with the new name already exists.');\n        return;\n      }\n      newFileSystem[newName] = newFileSystem[oldName];\n      delete newFileSystem[oldName];\n      setFileSystem(newFileSystem);\n    }\n  };\n\n  const deleteItem = (itemName) => {\n    const newFileSystem = { ...fileSystem };\n    delete newFileSystem[itemName];\n    setFileSystem(newFileSystem);\n  };\n\n  const copyItem = (itemName) => {\n    setClipboard({ itemName, content: fileSystem[itemName], action: 'copy' });\n  };\n\n  const cutItem = (itemName) => {\n    setClipboard({ itemName, content: fileSystem[itemName], action: 'cut' });\n  };\n\n  const pasteItem = (targetFolderName) => {\n    if (!clipboard) return;\n    const { itemName, content, action } = clipboard;\n    const newFileSystem = { ...fileSystem };\n    if (action === 'cut') {\n      if (newFileSystem[targetFolderName]) {\n        newFileSystem[targetFolderName][itemName] = content;\n        delete newFileSystem[clipboard.itemName];\n      } else {\n        newFileSystem[targetFolderName] = { [itemName]: content };\n      }\n    } else if (action === 'copy') {\n      if (newFileSystem[targetFolderName]) {\n        newFileSystem[targetFolderName][itemName] = content;\n      } else {\n        newFileSystem[targetFolderName] = { [itemName]: content };\n      }\n    }\n    setFileSystem(newFileSystem);\n    if (action === 'cut') {\n      setClipboard(null);\n    }\n  };\n\n  const renderFileSystem = (fs) => {\n    return Object.keys(fs).map((key) => {\n      if (typeof fs[key] === 'object' && fs[key] !== null && !(fs[key] instanceof Array)) {\n        return (\n          <FolderComponent\n            key={key}\n            name={key}\n            onDelete={() => deleteItem(key)}\n            onPaste={() => pasteItem(key)}\n          >\n            {renderFileSystem(fs[key])}\n          </FolderComponent>\n        );\n      } else {\n        return (\n          <FileComponent\n            key={key}\n            name={key}\n            content={fs[key]}\n            onContentSave={(name, content) => updateFileContent(name, content)}\n            onRename={(oldName, newName) => renameItem(oldName, newName)}\n            onDelete={() => deleteItem(key)}\n            onCopy={() => copyItem(key)}\n            onCut={() => cutItem(key)}\n          />\n        );\n      }\n    });\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={searchQuery}\n        onChange={(e) => setSearchQuery(e.target.value)}\n        placeholder=\"Search files and folders\"\n      />\n      <input\n        type=\"text\"\n        value={newItemName}\n        onChange={(e) => setNewItemName(e.target.value)}\n        placeholder=\"Enter new item name\"\n      />\n      <button onClick={() => addNewItem(true)}>Add Folder</button>\n      <button onClick={() => addNewItem(false)}>Add File</button>\n      {clipboard && <button onClick={() => pasteItem('')}>Paste into root</button>}\n      <div style={{ marginTop: '20px' }}>\n        {renderFileSystem(fileSystem)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}